{"version":3,"sources":["components/entry.js","components/new-entry.js","components/filter.js","components/notification.js","services/phonebook.js","App.js","index.js"],"names":["Entry","name","number","removeEntry","entry","onClick","NewEntry","addNewEntry","handleNameChange","handleNumberChange","newName","newNumber","onSubmit","placeholder","value","onChange","type","Filter","filter","handleFilterChange","Notification","message","className","style","opacity","baseUrl","exportObject","getAll","axios","get","then","response","data","create","newObject","post","remove","id","delete","update","put","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","filteredPersons","setFilteredPersons","setMessage","useEffect","document","title","phonebookService","phonebook","newPersons","person","toLowerCase","includes","e","preventDefault","target","personExists","length","window","confirm","updateEntry","updatedEntry","map","setTimeout","catch","error","alert","newEntry","createdEntry","removedEntry","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8f031e24.chunk.js","sourcesContent":["import React from 'react';\n\nconst Entry = ({name, number, removeEntry}) => {\n  const entry = ` ${name} ${number}`;\n  return (\n    <div>\n      <button onClick={removeEntry}>delete</button>\n      {entry}\n    </div>\n  );\n};\n\nexport default Entry;\n","import React from 'react';\n\nconst NewEntry = ({\n  addNewEntry,\n  handleNameChange,\n  handleNumberChange,\n  newName,\n  newNumber,\n}) => {\n  return (\n    <form onSubmit={addNewEntry}>\n      <div>\n        name:\n        <input\n          placeholder='Enter name'\n          value={newName}\n          onChange={handleNameChange}\n        />\n      </div>\n      <div>\n        number:\n        <input\n          placeholder='Enter number'\n          value={newNumber}\n          onChange={handleNumberChange}\n        />\n      </div>\n      <div>\n        <button type='submit'>add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewEntry;\n","import React from 'react';\n\nconst Filter = ({ filter, handleFilterChange }) => {\n  return (\n    <div>\n      <input\n        placeholder='Type to filter by name'\n        onChange={handleFilterChange}\n        value={filter}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// styles\nimport './notification.css';\n\nconst Notification = ({message}) => {\n  return (\n    <div className='notification' style={{opacity: message ? 1 : 0}}>\n      {message}\n    </div>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then((response) => response.data)\n}\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then((response) => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then((response) => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then((response) => response.data)\n}\n\nconst exportObject = {\n  getAll,\n  create,\n  remove,\n  update,\n}\n\nexport default exportObject\n","import React, {useState, useEffect} from 'react';\n// Components\nimport Entry from './components/entry';\nimport NewEntry from './components/new-entry';\nimport Filter from './components/filter';\nimport Notification from './components/notification';\n// services getAll, create, remove, update\nimport phonebookService from './services/phonebook';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [filteredPersons, setFilteredPersons] = useState(persons);\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    document.title = 'Phonebook';\n  }, []);\n\n  useEffect(() => {\n    phonebookService // force-break\n      .getAll()\n      .then((phonebook) => {\n        setPersons(phonebook);\n      });\n  }, []);\n\n  const handleNameChange = (e) => {\n    e.preventDefault();\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = (e) => {\n    e.preventDefault();\n    setNewNumber(e.target.value);\n  };\n\n  useEffect(() => {\n    setFilteredPersons(persons);\n    if (filter !== '') {\n      const newPersons = persons.filter((person) =>\n        person.name.toLowerCase().includes(filter.toLowerCase())\n      );\n      setFilteredPersons(newPersons);\n    }\n  }, [filter, persons]);\n\n  const handleFilterChange = (e) => {\n    e.preventDefault();\n    setFilter(e.target.value);\n  };\n\n  const addNewEntry = (e) => {\n    e.preventDefault();\n    // check if name allready in the phonebook\n    const personExists = persons.filter((person) => person.name === newName);\n    if (personExists.length === 1) {\n      if (\n        window.confirm(\n          `${newName} is allready in the phonebook, update number?`\n        )\n      ) {\n        const updateEntry = {name: newName, number: newNumber};\n        phonebookService\n          .update(personExists[0].id, updateEntry)\n          .then((updatedEntry) => {\n            setPersons(\n              persons.map((person) =>\n                person.id === updatedEntry.id ? updatedEntry : person\n              )\n            );\n            setMessage(`Updated \"${updatedEntry.name}\"`);\n            setTimeout(() => {\n              setMessage('');\n            }, 2000);\n          })\n          .catch((error) => {\n            setMessage(`\"${newName}\" no longer present on the server`);\n          });\n      }\n    } else if (newNumber === '' || newName === '') {\n      window.alert(\"Field can't be empty\");\n    } else {\n      const newEntry = {name: newName, number: newNumber};\n      phonebookService // force-break\n        .create(newEntry)\n        .then((createdEntry) => {\n          setPersons([...persons, createdEntry]);\n          setMessage(`Added \"${createdEntry.name}\"`);\n          setTimeout(() => {\n            setMessage('');\n          }, 2000);\n        });\n      setNewName('');\n      setNewNumber('');\n    }\n  };\n\n  const removeEntry = (id) => {\n    const name = persons.filter((person) => person.id === id)[0].name;\n    if (window.confirm(`Remove ${name} from phonebook?`)) {\n      phonebookService.remove(id).then((removedEntry) => {\n        setPersons(persons.filter((person) => person.id !== id));\n        setMessage(`Removed \"${name}\"`);\n        setTimeout(() => {\n          setMessage('');\n        }, 2000);\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <NewEntry\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        addNewEntry={addNewEntry}\n        newName={newName}\n        newNumber={newNumber}\n      />\n      <Notification message={message} />\n      <h2>Numbers</h2>\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      {filteredPersons.map((person) => (\n        <Entry\n          key={person.id}\n          name={person.name}\n          number={person.number}\n          removeEntry={() => removeEntry(person.id)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}